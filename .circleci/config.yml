version: 2 # use CircleCI 2.0
orbs:
  aws-s3: circleci/aws-s3@1.0.4
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/sartar-react-frontend # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      # TODO: Required with yarn?
      #- run:
      #    name: update-npm
      #    command: 'sudo npm install -g npm@latest'
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: # run tests
          name: test
          command: yarn test
      - run:
          name: build
          command: yarn build
      # TODO
      #- run: # run coverage report
      #    name: code-coverage
      #    command: './node_modules/.bin/nyc report --reporter=text-lcov'
      #- store_artifacts: # special step to save test results as as artifact
      #    # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #    path: test-results.xml
      #    prefix: tests
      #- store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #    path: coverage
      #    prefix: coverage
      #- store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #    path: test-results.xml
      - aws-s3/sync:
          from: build
          to: 's3://sartar-clan-questionnaire/react-frontend'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true
